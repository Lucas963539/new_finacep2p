{"uid":"49b2ae487b6970b2","name":"test_register[18911112222-test123-8888-666666-注册成功]","fullName":"script.test_register_login#test_register","historyId":"5b3a8d9b0ebea1630cf230c3cb540ea5","time":{"start":1674186553197,"stop":1674186553544,"duration":347},"status":"failed","statusMessage":"AssertionError: assert '注册成功' in '{\"status\":100,\"description\":\"手机已存在!\"}'\n +  where '{\"status\":100,\"description\":\"手机已存在!\"}' = <Response [200]>.text","statusTrace":"self = <script.test_register_login.TestRegisterLogin object at 0x1115d1e20>, phone = '18911112222', password = 'test123', imgVerifyCode = '8888', phone_code = '666666'\nexpect_text = '注册成功'\n\n    @allure.story(\"注册接口  测试\")\n    @pytest.mark.parametrize(\"phone, password, imgVerifyCode, phone_code,expect_text\", read_json(\"register_login_data.json\", \"register\"))\n    def test_register(self, phone, password, imgVerifyCode, phone_code,expect_text):\n        try:\n            with allure.step(\"1.调用获取图片验证码接口\"):\n                self.reg.api_get_img_code(12)\n            with allure.step(\"2.调取获取短信验证码接口\"):\n                self.reg.api_get_phone_code(phone=phone, imgVerifyCode=imgVerifyCode)\n            with allure.step(\"3.调取注册接口\"):\n                result = self.reg.api_register(\n                    phone=phone,\n                    password=password,\n                    verifycode=imgVerifyCode,\n                    phone_code=phone_code,\n                )\n                log.info(f'执行结果为：{result.text}')\n            with allure.step(\"3.断言响应文本信息\"):\n>               assert expect_text in result.text\nE               assert '注册成功' in '{\"status\":100,\"description\":\"手机已存在!\"}'\nE                +  where '{\"status\":100,\"description\":\"手机已存在!\"}' = <Response [200]>.text\n\nscript/test_register_login.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert '注册成功' in '{\"status\":100,\"description\":\"手机已存在!\"}'\n +  where '{\"status\":100,\"description\":\"手机已存在!\"}' = <Response [200]>.text","statusTrace":"self = <script.test_register_login.TestRegisterLogin object at 0x1115d1e20>, phone = '18911112222', password = 'test123', imgVerifyCode = '8888', phone_code = '666666'\nexpect_text = '注册成功'\n\n    @allure.story(\"注册接口  测试\")\n    @pytest.mark.parametrize(\"phone, password, imgVerifyCode, phone_code,expect_text\", read_json(\"register_login_data.json\", \"register\"))\n    def test_register(self, phone, password, imgVerifyCode, phone_code,expect_text):\n        try:\n            with allure.step(\"1.调用获取图片验证码接口\"):\n                self.reg.api_get_img_code(12)\n            with allure.step(\"2.调取获取短信验证码接口\"):\n                self.reg.api_get_phone_code(phone=phone, imgVerifyCode=imgVerifyCode)\n            with allure.step(\"3.调取注册接口\"):\n                result = self.reg.api_register(\n                    phone=phone,\n                    password=password,\n                    verifycode=imgVerifyCode,\n                    phone_code=phone_code,\n                )\n                log.info(f'执行结果为：{result.text}')\n            with allure.step(\"3.断言响应文本信息\"):\n>               assert expect_text in result.text\nE               assert '注册成功' in '{\"status\":100,\"description\":\"手机已存在!\"}'\nE                +  where '{\"status\":100,\"description\":\"手机已存在!\"}' = <Response [200]>.text\n\nscript/test_register_login.py:97: AssertionError","steps":[{"name":"1.创建session对象","time":{"start":1674186553196,"stop":1674186553196,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"2.实例化ApiRegisterLogin对象","time":{"start":1674186553196,"stop":1674186553196,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"1.调用获取图片验证码接口","time":{"start":1674186553197,"stop":1674186553359,"duration":162},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"2.调取获取短信验证码接口","time":{"start":1674186553359,"stop":1674186553456,"duration":97},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"3.调取注册接口","time":{"start":1674186553456,"stop":1674186553525,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"3.断言响应文本信息","time":{"start":1674186553525,"stop":1674186553526,"duration":1},"status":"failed","statusMessage":"AssertionError: assert '注册成功' in '{\"status\":100,\"description\":\"手机已存在!\"}'\n +  where '{\"status\":100,\"description\":\"手机已存在!\"}' = <Response [200]>.text\n","statusTrace":"  File \"/Users/jiangcheng/PycharmProjects/new_finacep2p/script/test_register_login.py\", line 97, in test_register\n    assert expect_text in result.text\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},{"name":"关闭session","time":{"start":1674186553614,"stop":1674186553614,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[{"uid":"a70d083565cf8491","name":"log","source":"a70d083565cf8491.txt","type":"text/plain","size":1499}],"parameters":[],"stepsCount":7,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"登录注册模块"},{"name":"epic","value":"金融P2P"},{"name":"story","value":"注册接口  测试"},{"name":"parentSuite","value":"script"},{"name":"suite","value":"test_register_login"},{"name":"subSuite","value":"TestRegisterLogin"},{"name":"host","value":"jiangtaodeMacBook-Pro.local"},{"name":"thread","value":"78028-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"script.test_register_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expect_text","value":"'注册成功'"},{"name":"imgVerifyCode","value":"'8888'"},{"name":"password","value":"'test123'"},{"name":"phone","value":"'18911112222'"},{"name":"phone_code","value":"'666666'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"49b2ae487b6970b2.json","parameterValues":["'注册成功'","'8888'","'test123'","'18911112222'","'666666'"]}